category: Identity and Access Management
commonfields:
  id: Okta IAM
  version: -1
configuration:
- display: Okta URL (https://<domain>.okta.com)
  name: url
  required: true
  type: 0
- display: API Token (see Detailed Instructions)
  name: apitoken
  required: true
  type: 4
- display: Trust any certificate (not secure)
  name: insecure
  required: false
  type: 8
- display: Use system proxy settings
  name: proxy
  required: false
  type: 8
- defaultvalue: 'true'
  display: Create User Command Enabled
  name: create-user-enabled
  required: false
  type: 8
- defaultvalue: 'true'
  display: Update User Command Enabled
  name: update-user-enabled
  required: false
  type: 8
- defaultvalue: 'true'
  display: Enable/Disable User Commands Enabled
  name: enable-disable-user-enabled
  required: false
  type: 8
- defaultvalue: 'true'
  display: Automatically create user if not found in update and enable commands
  name: create-if-not-exists
  required: false
  type: 8
- defaultvalue: User Profile - Okta (Incoming)
  display: Incoming Mapper
  name: mapper-in
  required: true
  type: 0
- defaultvalue: User Profile - Okta (Outgoing)
  display: Outgoing Mapper
  name: mapper-out
  required: true
  type: 0
- display: Fetch limit (recommended value is less than 200)
  name: max_fetch
  defaultvalue: "50"
  type: 0
  required: false
- display: Fetch incidents
  name: isFetch
  type: 8
  required: false
- display: Incidents Fetch Interval
  name: incidentFetchInterval
  defaultvalue: "1"
  type: 19
  required: false
- display: Incident type
  name: incidentType
  type: 13
  required: false
- display: Automatically generate fetch query filter
  defaultvalue: 'false'
  name: auto_generate_query_filter
  required: false
  type: 8
  additionalinfo: If checked, the fetch query filter will be automatically generated from
    the IAM configuration incident. Otherwise, the Fetch Query Filter parameter will be used.
- display: Fetch Query Filter
  name: fetch_query_filter
  required: false
  type: 0
  additionalinfo: Generate a query filter for okta logs API to retrieve only applications
    configured in XSOAR. To generate the filter, go to Okta's System Log and use the advanced search.
- defaultvalue: 7 days
  display: First fetch timestamp (<number> <time unit>, e.g., 12 hours, 7 days)
  name: first_fetch
  required: false
  type: 0
description: Integrate with Okta's Identity Access Management service to execute CRUD
  operations to employee lifecycle processes.
display: Okta IAM
name: Okta IAM
script:
  commands:
  - arguments:
    - default: false
      description: User Profile indicator details.
      isArray: false
      name: user-profile
      required: true
      secret: false
    deprecated: false
    description: Creates a user.
    execution: true
    name: iam-create-user
    outputs:
    - contextPath: IAM.Vendor.active
      description: If true the employee's status is active, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Gives the user information if the API was successful, otherwise
        error information.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: If true, the command was executed successfully, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - arguments:
    - default: false
      description: A User Profile indicator.
      isArray: false
      name: user-profile
      required: true
      secret: false
    deprecated: false
    description: Updates an existing user with the data passed in the user-profile
      argument.
    execution: true
    name: iam-update-user
    outputs:
    - contextPath: IAM.Vendor.active
      description: If true the employee's status is active, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Gives the user information if the API was successful, otherwise
        error information.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: If true, the command was executed successfully, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - arguments:
    - default: false
      description: A User Profile indicator.
      isArray: false
      name: user-profile
      required: true
      secret: false
    deprecated: false
    description: Retrieves a single user resource.
    execution: false
    name: iam-get-user
    outputs:
    - contextPath: IAM.Vendor.active
      description: If true the employee's status is active, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Gives the user information if the API was successful, otherwise
        error information.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: If true, the command was executed successfully, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - arguments:
    - default: false
      description: A User Profile indicator.
      isArray: false
      name: user-profile
      required: true
      secret: false
    deprecated: false
    description: Enables a deprovisioned user.
    execution: true
    name: iam-enable-user
    outputs:
    - contextPath: IAM.Vendor.active
      description: If true the employee's status is active, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Gives the user information if the API was successful, otherwise
        error information.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: If true, the command was executed successfully, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - arguments:
    - default: false
      description: A User Profile indicator.
      isArray: false
      name: user-profile
      required: true
      secret: false
    deprecated: false
    description: Disable an active user.
    execution: true
    name: iam-disable-user
    outputs:
    - contextPath: IAM.Vendor.active
      description: If true the employee's status is active, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.brand
      description: Name of the integration.
      type: String
    - contextPath: IAM.Vendor.details
      description: Gives the user information if the API was successful, otherwise
        error information.
      type: string
    - contextPath: IAM.Vendor.email
      description: The employee's email address.
      type: String
    - contextPath: IAM.Vendor.errorCode
      description: HTTP error response code.
      type: Number
    - contextPath: IAM.Vendor.errorMessage
      description: Reason why the API failed.
      type: String
    - contextPath: IAM.Vendor.id
      description: The employee's user ID in the app.
      type: String
    - contextPath: IAM.Vendor.instanceName
      description: Name of the integration instance.
      type: string
    - contextPath: IAM.Vendor.success
      description: If true, the command was executed successfully, otherwise false.
      type: Boolean
    - contextPath: IAM.Vendor.username
      description: The employee's username in the app.
      type: String
  - deprecated: false
    description: Retrieves a User Profile schema which holds all of the user fields within the application.
      Used for outgoing-mapping through the Get Schema option.
    execution: false
    name: get-mapping-fields
  - name: okta-get-app-user-assignment
    arguments:
    - name: user_id
      required: true
      description: ID of the user for which to get information.
    - name: application_id
      required: true
      description: ID of the application for which to get information.
    outputs:
    - contextPath: Okta.AppUserAssignment.UserID
      description: ID of the user.
      type: string
    - contextPath: Okta.AppUserAssignment.AppID
      description: ID of the application.
      type: string
    - contextPath: Okta.AppUserAssignment.IsAssigned
      description: True if the user is assigned to the application, false otherwise.
      type: boolean
    description: Returns information about application's user assignment.
  - name: okta-list-applications
    arguments:
    - name: query
      required: false
      description: Search for applications by their names.
    - name: filter
      required: false
      description: Filters apps by status, user.id or group.id expression.
    - name: limit
      required: false
      defaultValue: '50'
      description: Maximum number of apps to retrieve (maximal value is 200).
    outputs:
    - contextPath: Okta.Application.ID
      description: ID of the application.
      type: string
    - contextPath: Okta.Application.Name
      description: Name of the application.
      type: string
    - contextPath: Okta.Application.Label
      description: Label of the application.
      type: string
    description: Returns a list of Okta applications data.
  dockerimage: demisto/python3:3.8.6.13358
  isfetch: true
  longRunning: false
  longRunningPort: false
  runonce: false
  script: '-'
  subtype: python3
  type: python
  ismappable: true
  isremotesyncout: true
tests:
- No tests
fromversion: 6.0.0
