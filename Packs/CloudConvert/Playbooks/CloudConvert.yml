id: CloudConvert
version: -1
name: CloudConvert
description: Use this playbook to convert a file to the required format using CloudConvert.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 310e2bd8-a0c8-4243-83bd-064d35844268
    type: start
    task:
      id: 310e2bd8-a0c8-4243-83bd-064d35844268
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "18"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": -120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 934ef52e-8df3-4b83-846c-db51efcfeed8
    type: regular
    task:
      id: 934ef52e-8df3-4b83-846c-db51efcfeed8
      version: -1
      name: Import The File To The Server
      description: Import the file.
      script: '|||cloudconvert-import'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      entry_id:
        complex:
          root: inputs.entry_id
          filters:
          - - operator: isNotEmpty
              left:
                value:
                  simple: inputs.entry_id
                iscontext: true
      file_name: {}
      url:
        complex:
          root: inputs.url
          filters:
          - - operator: isNotEmpty
              left:
                value:
                  simple: inputs.url
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 180
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: 33555613-cbd2-487e-8030-93227a8906b1
    type: playbook
    task:
      id: 33555613-cbd2-487e-8030-93227a8906b1
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "4"
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        simple: ${CloudConvert.Task.id}
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: task_id
      PollingCommandName:
        simple: cloudconvert-check-status
      Timeout:
        simple: "10"
      dt:
        simple: CloudConvert.Task(val.status != 'finished').id
    separatecontext: false
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 450,
          "y": 380
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "4":
    id: "4"
    taskid: cc390895-2837-4b14-8cd6-470c6f99c42f
    type: regular
    task:
      id: cc390895-2837-4b14-8cd6-470c6f99c42f
      version: -1
      name: Convert The File
      description: Convert the file to the required format.
      script: '|||cloudconvert-convert'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      output_format:
        complex:
          root: inputs.output_format
      task_id:
        complex:
          root: CloudConvert.Task
          filters:
          - - operator: containsString
              left:
                value:
                  simple: CloudConvert.Task.operation
                iscontext: true
              right:
                value:
                  simple: import
          accessor: id
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 580
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "5":
    id: "5"
    taskid: 191ce5b8-26af-4f33-80ec-d7c19771f928
    type: playbook
    task:
      id: 191ce5b8-26af-4f33-80ec-d7c19771f928
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        complex:
          root: CloudConvert.Task
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: CloudConvert.Task.operation
                iscontext: true
              right:
                value:
                  simple: convert
          accessor: id
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: task_id
      PollingCommandName:
        simple: cloudconvert-check-status
      Timeout:
        simple: "10"
      dt:
        simple: CloudConvert.Task(val.status!='finished').id
    separatecontext: false
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 0
    view: |-
      {
        "position": {
          "x": 450,
          "y": 760
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "6":
    id: "6"
    taskid: 1a9b20ed-7217-4558-8628-66e4263b8b34
    type: regular
    task:
      id: 1a9b20ed-7217-4558-8628-66e4263b8b34
      version: -1
      name: Export The File
      description: Export the file
      script: '|||cloudconvert-export'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      export_as:
        complex:
          root: inputs.export_via
      task_id:
        complex:
          root: CloudConvert.Task
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: CloudConvert.Task.operation
                iscontext: true
              right:
                value:
                  simple: convert
          accessor: id
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 930
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "13":
    id: "13"
    taskid: 5687ac9a-72b6-4b05-8661-1db87c10da81
    type: condition
    task:
      id: 5687ac9a-72b6-4b05-8661-1db87c10da81
      version: -1
      name: 'Exporting To War Room Entry? '
      description: Check if exporting to War Room entry.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "15"
      "yes":
      - "16"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.export_via
            iscontext: true
          right:
            value:
              simple: war_room_entry
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1270
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "14":
    id: "14"
    taskid: e3bdecaf-2861-43e3-86ef-6fcbf83aa87f
    type: playbook
    task:
      id: e3bdecaf-2861-43e3-86ef-6fcbf83aa87f
      version: -1
      name: GenericPolling
      description: |-
        Use this playbook as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continuously running the command in Step \#2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "13"
    scriptarguments:
      AdditionalPollingCommandArgNames: {}
      AdditionalPollingCommandArgValues: {}
      Ids:
        complex:
          root: CloudConvert.Task
          filters:
          - - operator: containsString
              left:
                value:
                  simple: CloudConvert.Task.operation
                iscontext: true
              right:
                value:
                  simple: export
          accessor: id
      Interval:
        simple: "1"
      PollingCommandArgName:
        simple: task_id
      PollingCommandName:
        simple: cloudconvert-check-status
      Timeout:
        simple: "10"
      dt:
        simple: CloudConvert.Task(val.status!='finished').id
    separatecontext: false
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1095
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "15":
    id: "15"
    taskid: c9d5343f-8ad3-4554-80e2-40b4191cf3c2
    type: regular
    task:
      id: c9d5343f-8ad3-4554-80e2-40b4191cf3c2
      version: -1
      name: Check Status - Used For Getting Finished Export Task's Data
      description: Check the status of an operation. Use the 'create_war_room_entry' argument to
        also create a War Room entry of the file when checking on an export operation.
      script: '|||cloudconvert-check-status'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      create_war_room_entry:
        simple: "false"
      task_id:
        complex:
          root: CloudConvert.Task
          filters:
          - - operator: containsString
              left:
                value:
                  simple: CloudConvert.Task.operation
                iscontext: true
              right:
                value:
                  simple: export
          accessor: id
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 660,
          "y": 1450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "16":
    id: "16"
    taskid: c2f426de-4837-4090-8c8f-605d6f2545ed
    type: regular
    task:
      id: c2f426de-4837-4090-8c8f-605d6f2545ed
      version: -1
      name: Check Status - Used For Getting Finished Export Task's Data And Create
        Entry
      description: Check the status of an operation. Use the 'create_war_room_entry' argument to
        also create a War Room entry of the file when checking on an export operation.
      script: '|||cloudconvert-check-status'
      type: regular
      iscommand: true
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      create_war_room_entry:
        simple: "true"
      task_id:
        complex:
          root: CloudConvert.Task
          filters:
          - - operator: containsString
              left:
                value:
                  simple: CloudConvert.Task.operation
                iscontext: true
              right:
                value:
                  simple: export
          accessor: id
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 240,
          "y": 1450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "17":
    id: "17"
    taskid: 2d9994d4-80e5-467a-894d-f66d88578f7b
    type: title
    task:
      id: 2d9994d4-80e5-467a-894d-f66d88578f7b
      version: -1
      name: Done
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 470,
          "y": 1690
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "18":
    id: "18"
    taskid: dc887b89-5538-4f8a-82ec-c2d7f16433f9
    type: condition
    task:
      id: dc887b89-5538-4f8a-82ec-c2d7f16433f9
      version: -1
      name: IsIntegrationAvailable
      description: Returns 'yes' if the integration brand is available. Otherwise returns
        'no'
      scriptName: IsIntegrationAvailable
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "1"
    scriptarguments:
      brandname:
        simple: CloudConvert
    results:
    - brandInstances
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 25
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1875,
        "width": 800,
        "x": 240,
        "y": -120
      }
    }
  }
inputs:
- key: url
  value: {}
  required: false
  description: The URL of the imported file. If an entry ID is supplied, do
    not use this argument.
  playbookInputQuery:
- key: entry_id
  value: {}
  required: false
  description: The entry ID of the imported file. If a URL is supplied, do
    not use this argument.
  playbookInputQuery:
- key: output_format
  value: {}
  required: true
  description: |
    The required output format.
  playbookInputQuery:
- key: export_via
  value: {}
  required: true
  description: |
    The method for exporting the resulted file, URL or war_room_entry
  playbookInputQuery:
outputs:
- contextPath: CloudConvert.Task.result.files.url
  description: Resulted file url
- contextPath: CloudConvert.Task.result.files.filename
  description: Resulted file name
- contextPath: CloudConvert.Task.result.files.size
  description: Resulted size of file
tests:
- CloudConvert-test
fromversion: 5.0.0
